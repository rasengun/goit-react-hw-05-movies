{"version":3,"file":"static/js/85.0197f2d6.chunk.js","mappings":"4PACA,EAA0B,iC,SC+E1B,EAlEwB,WAAO,IAAD,EAC5B,GAA0BA,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBF,OAAQ,KAErCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEIC,EAAAA,EAAAA,IAAaT,GAFjB,OAETU,EAFS,OAGfX,EAASW,GAHM,gDAINC,EAJM,KAINA,SACTC,QAAQC,IAAIF,EAASD,KAAKI,SALX,yDAAH,qDAShBN,GACD,GAAE,CAACR,IAEJ,IAAMe,GAASC,EAAAA,EAAAA,cAAY,kBAAMd,EAASE,EAAf,GAAsB,CAACF,EAAUE,IAE5D,OACE,iCACE,mBAAQa,QAASF,EAAQG,KAAK,SAA9B,0BAGwBC,KAAlB,OAALrB,QAAK,IAALA,OAAA,EAAAA,EAAOsB,cACN,gBACEC,IAAI,GACJC,IAAG,gDAAoCxB,QAApC,IAAoCA,OAApC,EAAoCA,EAAOsB,aAC9CG,UAAWC,IAJd,sBASD,+BAAK1B,QAAL,IAAKA,OAAL,EAAKA,EAAO2B,SACZ,yCAAuC,IAAjB,OAAL3B,QAAK,IAALA,OAAA,EAAAA,EAAO4B,eAAmBC,QAAQ,GAAnD,QACA,sCACA,8BAAI7B,QAAJ,IAAIA,OAAJ,EAAIA,EAAO8B,YACX,oCACA,6BACqBT,KAAb,OAALrB,QAAK,IAALA,OAAA,EAAAA,EAAO+B,QACJ/B,EAAM+B,OAAOC,KAAI,gBAAG9B,EAAH,EAAGA,GAAI+B,EAAP,EAAOA,KAAP,OAAkB,wBAAcA,GAAL/B,EAA3B,IADpB,eAIH,mDAEA,2BACE,yBACE,SAAC,KAAD,CAAMM,MAAO,CAAEF,KAAAA,GAAQ4B,GAAE,kBAAahC,EAAb,SAAzB,qBAIF,yBACE,SAAC,KAAD,CAAMM,MAAO,CAAEF,KAAAA,GAAQ4B,GAAE,kBAAahC,EAAb,YAAzB,wBAIF,SAAC,KAAD,SAIP,C,sLC5EKiC,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAC,EAAc,mCAAG,2GAAOC,EAAP,+BAAe,GAAf,SACLN,EAASO,IAAT,gBAA8B,CACnDJ,OAAQ,CACNG,MAAAA,KAHwB,uBACpB7B,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,qDAUd+B,EAAiB,mCAAG,sGACRR,EAASO,IAAT,uBADQ,uBACvB9B,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBD,EAAY,mCAAG,WAAMT,GAAN,yFACHiC,EAASO,IAAT,iBAAuBxC,IADpB,uBAClBU,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZgC,EAAe,mCAAG,WAAM1C,GAAN,yFACNiC,EAASO,IAAT,iBAAuBxC,EAAvB,aADM,uBACrBU,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfiC,EAAe,mCAAG,WAAM3C,GAAN,yFACNiC,EAASO,IAAT,iBAAuBxC,EAAvB,aADM,uBACrBU,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/Pages/SingleMoviePage/singleMoviePage.module.css?f835","components/Pages/SingleMoviePage/SingleMoviePage.jsx","components/shared/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"singleMoviePage_wrapper__3i0bt\"};","import { useState, useEffect } from 'react';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\n\nimport { getMovieById } from 'components/shared/services/api';\n\nimport s from './singleMoviePage.module.css';\nimport { useCallback } from 'react';\n\nconst SingleMoviePage = () => {\n  const [movie, setMovie] = useState();\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const data = await getMovieById(id);\n        setMovie(data);\n      } catch ({ response }) {\n        console.log(response.data.message);\n      }\n    };\n\n    fetchMovie();\n  }, [id]);\n\n  const goBack = useCallback(() => navigate(from), [navigate, from]);\n\n  return (\n    <>\n      <button onClick={goBack} type=\"button\">\n        Go back\n      </button>\n      {movie?.poster_path !== undefined ? (\n        <img\n          alt=\"\"\n          src={`https://image.tmdb.org/t/p/w400${movie?.poster_path}`}\n          className={s.wrapper}\n        />\n      ) : (\n        `Movie poster image`\n      )}\n      <h1>{movie?.title}</h1>\n      <p>User Score: {(movie?.vote_average * 10).toFixed(2)}%</p>\n      <h2>Overview</h2>\n      <p>{movie?.overview}</p>\n      <h2>Genres</h2>\n      <ul>\n        {movie?.genres !== undefined\n          ? movie.genres.map(({ id, name }) => <li key={id}>{name}</li>)\n          : `No genres`}\n      </ul>\n      <p>Additional information</p>\n\n      <ul>\n        <li>\n          <Link state={{ from }} to={`/movies/${id}/cast`}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link state={{ from }} to={`/movies/${id}/reviews`}>\n            Reviews\n          </Link>\n        </li>\n        <Outlet />\n      </ul>\n    </>\n  );\n};\n\nexport default SingleMoviePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '78817c69ceeb2b190f57a1a13eaf9936',\n  },\n});\n\nexport const getSearchMovie = async (query = '') => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useState","movie","setMovie","id","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovie","getMovieById","data","response","console","log","message","goBack","useCallback","onClick","type","undefined","poster_path","alt","src","className","s","title","vote_average","toFixed","overview","genres","map","name","to","instance","axios","baseURL","params","api_key","getSearchMovie","query","get","getTrendingMovies","getMovieCredits","getMovieReviews"],"sourceRoot":""}