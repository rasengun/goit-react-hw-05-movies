{"version":3,"file":"static/js/550.1d534827.chunk.js","mappings":"oMACA,EAAuB,wB,SCOjBA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEXC,EAAWH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAC1B,SAAC,KAAD,CACEC,UAAWC,EACXC,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMV,GAHjB,UAME,uBAAIK,KAFCD,EALmB,IAW5B,OAAO,wBAAKF,GACb,EAED,GAAeS,EAAAA,EAAAA,MAAKb,GAEpBA,EAAWc,aAAe,CACxBb,OAAQ,G,0HC+BV,UApDmB,WACjB,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAASF,EAAaG,IAAI,WAEhCC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAIA,IAAMG,EAAU,mCAAG,gHAEWC,EAAAA,EAAAA,IAAeJ,GAF1B,gBAEPK,EAFO,EAEPA,QAERT,GAAU,OAAIS,IAJC,gDAMfC,QAAQC,IAAI,KAAMC,SANH,yDAAH,qDAUhBL,GAZC,CAaF,GAAE,CAACH,IAEJ,IAAMS,GAAeC,EAAAA,EAAAA,cACnB,SAAAC,GACEA,EAAEC,iBACF,IAAQZ,EAAWW,EAAEE,cAAc7B,SAA3BgB,OACRD,EAAgB,CAAEC,OAAQA,EAAOc,MAAMC,gBACvCJ,EAAEE,cAAcG,OACjB,GACD,CAACjB,IAGH,OACE,iCACE,kBAAMkB,SAAUR,EAAhB,WACE,kBACES,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,UAAQ,KAEV,mBAAQJ,KAAK,SAAb,wBAGF,SAAC,IAAD,CAAYtC,OAAQA,MAGzB,C,sLCvDK2C,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BAETC,OAAQ,CACNC,QAAS,sCAIAxB,EAAc,mCAAG,2GAAOyB,EAAP,+BAAe,GAAf,SACLL,EAASvB,IAAT,gBAA8B,CACnD0B,OAAQ,CACNE,MAAAA,KAHwB,uBACpBC,EADoB,EACpBA,KADoB,kBAOrBA,GAPqB,2CAAH,qDAUdC,EAAiB,mCAAG,sGACRP,EAASvB,IAAT,uBADQ,uBACvB6B,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBE,EAAY,mCAAG,WAAM9C,GAAN,yFACHsC,EAASvB,IAAT,iBAAuBf,IADpB,uBAClB4C,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAe,mCAAG,WAAM/C,GAAN,yFACNsC,EAASvB,IAAT,iBAAuBf,EAAvB,aADM,uBACrB4C,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfI,EAAe,mCAAG,WAAMhD,GAAN,yFACNsC,EAASvB,IAAT,iBAAuBf,EAAvB,aADM,uBACrB4C,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieList/movieList.module.css?ccba","components/MovieList/MovieList.jsx","components/Pages/Movies/Movies.jsx","components/shared/services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"movieList_link__I+0hB\"};","import { memo } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\n\nimport s from './movieList.module.css';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const elements = movies.map(({ id, title }) => (\n    <Link\n      className={s.link}\n      to={`/movies/${id}`}\n      state={{ from: location }}\n      key={id}\n    >\n      <p>{title}</p>\n    </Link>\n  ));\n\n  return <ul>{elements}</ul>;\n};\n\nexport default memo(MoviesList);\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getSearchMovie } from 'components/shared/services/api';\n\nimport MoviesList from 'components/MovieList/MovieList';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('search');\n\n  useEffect(() => {\n    if (!search) {\n      return;\n    }\n\n    const fetchPosts = async () => {\n      try {\n        const { results } = await getSearchMovie(search);\n\n        setMovies([...results]);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchPosts();\n  }, [search]);\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n      const { search } = e.currentTarget.elements;\n      setSearchParams({ search: search.value.toLowerCase() });\n      e.currentTarget.reset();\n    },\n    [setSearchParams]\n  );\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          required\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n\n  params: {\n    api_key: '78817c69ceeb2b190f57a1a13eaf9936',\n  },\n});\n\nexport const getSearchMovie = async (query = '') => {\n  const { data } = await instance.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get(`/trending/movie/day`);\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["MoviesList","movies","location","useLocation","elements","map","id","title","className","s","to","state","from","memo","defaultProps","useState","setMovies","useSearchParams","searchParams","setSearchParams","search","get","useEffect","fetchPosts","getSearchMovie","results","console","log","message","handleSubmit","useCallback","e","preventDefault","currentTarget","value","toLowerCase","reset","onSubmit","name","type","autoComplete","autoFocus","placeholder","required","instance","axios","baseURL","params","api_key","query","data","getTrendingMovies","getMovieById","getMovieCredits","getMovieReviews"],"sourceRoot":""}